{
    "id": "java_cheat_sheet",
    "name": "Java",
    "description": "A set of java Syntax, functions, and expressions",
    "metadata": {
        "sourceName": "Cheatography",
        "sourceUrl": "http://www.cheatography.com/sschaub/cheat-sheets/java-fundamentals/"
    },
    "template_type": "terminal",
    "section_order": [  "Program Compilation and Execution",
                        "Data Types",
                        "Statements",
                        "Data Conversions",
                        "Text Formatting",
                        "String Methods",
                        "ArrayList Methods",
                        "HashMap Methods"],
    "sections": {
        "Program Compilation and Execution" : [
            {
                "key" : "javac Hello.java",
                "val" : "Compile Java File"
            },
            {
                "key" : "java Hello",
                "val" : "Execute Java Program"
            }
        ],
        "Data Types": [
            {
                "key" : "byte/short/int/long",
                "val" : "Integer Datatype"
            },
            {
                "key" : "float/double",
                "val" : "Floating Point Datatype"
             },
            {
                "key" : "char",
                "val" : "A Single Character"
            },
            {
                "key" : "boolean",
                "val" : "Represents True,False"
            },
            {
                "key" : "String",
                "val" : "Java object To Represent A Sequence Of Characters"
            }
            ],
        "Statements": [
            {
                "val" : "If Statement",
                "key" : "if(expression)\t\\{\n\tstatements\n\\}\telse\t\\{\n\tstatements\n\\}"
            },
            {
                "val" : "While Loop",
                "key" : "while(expression)\t\\{\n\tstatements\n\\}"
            },
            {
                "val" : "Do While Loop ",
                "key" : "do\t\\{\n\tstatements\n\\}\twhile(expression)"
            },
            {   "val" : "For Loop ",
                "key" : "for(Initialization;\tCondition;\tUpdation)\t\\{\n\tstatements\n\\}"
            },
            {   "val" : "For Each Loop ",
                "key" : "for(var\t:\tcollection)\t\\{\n\tstatements\n\\}"
            },
            {
                "val" : "Exception Handling",
                "key" : "try\t\\{\n\tstatements\n\\}\tcatch(ExceptionType\te1)\\{\n\tstatements\n\\}\tcatch(Exception\te2)\t\\{\n\tcatch-all\tstatements\n\\}\tfinally\t\\{\n\tstatements\t\\}"                
            }
        ],
        "Data Conversions": [
            {
                "val" : "String to Number",
                "key" : "int i = Integer.parseInt(str);\ndouble d = Double.parseDouble(str);"
            },
            {
                "val" : "Any Type to String",
                "key" : "String s = String.valueOf(value);"
            },
            {
                "val" : "Numeric Conversions",
                "key" : "int i = (int)numericexpression;"
            }
            ],
        "Text Formatting": [
            {
                "val" : "printf style formatting",
                "key" : "System.out.printf(\"Count\tis\t%d\n\",\tcount);\n s = String.format(\"Count\tis\t%d\",\tcount);"
            },
            {
                "val" : "MessageFormat style formatting",
                "key" : "MessageFormat.format(\"{0}\trows.\",\t5);"
            },
            {
                "val" : "Individual Numbers and Dates",
                "key" : "NumberFormat.getCurrencyInstance().format(x);\nSimpleDateFormat(\"\"h:mm\ta\"\").format(new\tDate());\nDecimalFormat(\"#,##0.00\").format(125.32);"
            }
        ],
        "String Methods": [
        {    
            "key" : "s.length()",
            "val" : "Length Of S"
        },
        {    
            "key" : "s.charAt(i)",
            "val" : "Extract ith Character"
        },
        {    
            "key" : "s.substring(start, end)",
            "val" : "Substring From Start To End"
        },
        {    
            "key" : "s.toUpperCase()/lowerCase()",
            "val" : "Returns Copy Of s In Caps/Lower Case"
        },
        {    
            "key" : "s.indexOf(x)",
            "val" : "Index Of First Occurence Of x"
        },
        {    
            "key" : "s.replace(old, new)",
            "val" : "Search And Replace"
        },
        {    
            "key" : "s.split(regex)",
            "val" : "Splits Into Tokens"
        },
        {    
            "key" : "s.trim()",
            "val" : "Trims Surrounding White Space"
        },
        {    
            "key" : "s.equals(s2)",
            "val" : "True If s Equals s2"
        },
        {    
            "key" : "s.compareTo(s2)",
            "val" : "0 if Equal or +ve If s > s2 or -ve If s < s2"
        }
        ],
        "ArrayList Methods" : [
            {    
            "key" : "l.add(item)",
            "val" : "Add Item To List"
        },
        {    
            "key" : "l.get(i)",
            "val" : "Return ith Item"
        },
        {    
            "key" : "l.size()",
            "val" : "Returns The Number Of Items"
        },
        {    
            "key" : "l.remove(i)",
            "val" : "Remove ith Item"
        },
        {    
            "key" : "l.set(i, value)",
            "val" : "Put value At Position i"
        }
        ],
    "HashMap Methods" : [
        {
            "key" : "m.put(key,value)",
            "val" : "Inserts Value With Key"
        },
        {
            "key" : "m.get(key)",
            "val" : "Retrieves Value With Key"
        },
        {   
            "key" : "m.containsKey(key)",
            "val" : "True If m Contains Key"
        }
    ]
    }
}
